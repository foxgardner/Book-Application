<script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/102/three.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/2.1.2/TweenMax.min.js"></script>
<script>

  //Set up.
  var scene = new THREE.Scene();

  var camera = new THREE.PerspectiveCamera(75,window.innerWidth/window.innerHeight,0.1,1000)
  camera.position.z = 10;

  var renderer = new THREE.WebGLRenderer({antialias: true});
  renderer.setClearColor("#e5e5e5");
  renderer.setSize(window.innerWidth,window.innerHeight);

  document.body.appendChild(renderer.domElement);

  window.addEventListener('resize', () => {
      renderer.setSize(window.innerWidth,window.innerHeight);
      camera.aspect = window.innerWidth / window.innerHeight;

      camera.updateProjectionMatrix();
  })

  //Lights!
  var light = new THREE.PointLight(0xFFFFFF, 5, 1000)

  light.position.set(0,25,10);
  scene.add(light);

  var render = function() {
      requestAnimationFrame(render);


      renderer.render(scene, camera);
  }

  // Created Book object
  // var loader = new THREE.OBJLoader();
  // loader.load( '/assets/models/book/blank-book.obj', function ( object ) {
  //   scene.add( object );
  // } );

  //Defining important things
  var raycaster = new THREE.Raycaster();
  var mouse = new THREE.Vector2();
  var book_count = "<%= escape_javascript(Book.count) %>";
</script>

<%= book_helper %>

<script>
  // Shelfing
  var geometry = new THREE.BoxGeometry(30, 1, 4);
  var material = new THREE.MeshLambertMaterial({color: 0x945D25})
  
  var mesh = new THREE.Mesh(geometry, material);
  mesh.position.y = -4.5;
  scene.add(mesh);

  //Annimations?
  function onMouseMove(event) {
      mouse.x = ( event.clientX / window.innerWidth ) * 2 - 1;
      mouse.y = - ( event.clientY / window.innerHeight ) * 2 + 1;

      raycaster.setFromCamera(mouse, camera);

      var intersects = raycaster.intersectObjects( scene.children );
      var j = 0;
      do {
        this.tl = new TimelineMax();
        this.tl.to(intersects[ 0 ].object.position, 1, {z: 1, ease: Expo.easeOut})
        if ( intersects ) {
          this.tl.to(intersects[ 0 ].object.position, 2, {z: 0, ease: Expo.easeOut})
          j++;
          break
        }
      } while ( j <= 0);
  }



  window.addEventListener('mousemove', onMouseMove);
  render();
</script>

<p id="notice"><%= notice %></p>

<h2>Books</h2>

<table>
  <thead>
    <tr>
      <th>Title</th>
      <th>Author</th>
      <th>Body</th>
      <th>Spine image</th>
      <th>Main image</th>
      <th colspan="3"></th>
    </tr>
  </thead>

  <tbody>
    <% @books.each do |book| %>
      <tr>
        <td><%= book.title %></td>
        <td><%= book.author %></td>
        <td><%= book.body %></td>
        <td><%= book.color %></td>
        <td><%= book.width %></td>
        <td><%= book.height %></td>
        <td><%= book.spine_image %></td>
        <td><%= book.main_image %></td>
        <td><%= link_to 'Show', book %></td>
        <td><%= link_to 'Edit', edit_book_path(book) %></td>
        <td><%= link_to 'Destroy', book, method: :delete, data: { confirm: 'Are you sure?' } %></td>
      </tr>
    <% end %>
  </tbody>
</table>

<br>

<%= link_to 'New Book', new_book_path %>
